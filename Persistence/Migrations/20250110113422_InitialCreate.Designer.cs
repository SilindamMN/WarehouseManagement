// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250110113422_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DestinationWareHouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SourceWareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationWareHouseId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SourceWareHouseId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ProductQuantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            ProductCode = "P001",
                            ProductDescription = "Product 1",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            ProductCode = "P002",
                            ProductDescription = "Product 2",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            ProductCode = "P003",
                            ProductDescription = "Product 3",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            ProductCode = "P004",
                            ProductDescription = "Product 4",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            ProductCode = "P005",
                            ProductDescription = "Product 5",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            ProductCode = "P006",
                            ProductDescription = "Product 6",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            ProductCode = "P007",
                            ProductDescription = "Product 7",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            ProductCode = "P008",
                            ProductDescription = "Product 8",
                            ProductQuantity = 20
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            ProductCode = "P009",
                            ProductDescription = "Product 9",
                            ProductQuantity = 20
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductWareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("ProductWareHouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            ProductId = 1,
                            Quantity = 20,
                            WareHouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            ProductId = 2,
                            Quantity = 20,
                            WareHouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            ProductId = 3,
                            Quantity = 20,
                            WareHouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            ProductId = 4,
                            Quantity = 20,
                            WareHouseId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            ProductId = 5,
                            Quantity = 20,
                            WareHouseId = 3
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            ProductId = 6,
                            Quantity = 20,
                            WareHouseId = 3
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            ProductId = 7,
                            Quantity = 20,
                            WareHouseId = 1
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            ProductId = 8,
                            Quantity = 20,
                            WareHouseId = 2
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            ProductId = 9,
                            Quantity = 20,
                            WareHouseId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("WareHouseCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WareHouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            WareHouseCode = "WH001",
                            WareHouseName = "Warehouse 1"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            WareHouseCode = "WH002",
                            WareHouseName = "Warehouse 2"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            WareHouseCode = "WH003",
                            WareHouseName = "Warehouse 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.WareHouse", "DestinationWareHouse")
                        .WithMany()
                        .HasForeignKey("DestinationWareHouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WareHouse", "SourceWareHouse")
                        .WithMany()
                        .HasForeignKey("SourceWareHouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinationWareHouse");

                    b.Navigation("Product");

                    b.Navigation("SourceWareHouse");
                });

            modelBuilder.Entity("Domain.Entities.ProductWareHouse", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductWareHouses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WareHouse", "WareHouse")
                        .WithMany("ProductWareHouses")
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductWareHouses");
                });

            modelBuilder.Entity("Domain.Entities.WareHouse", b =>
                {
                    b.Navigation("ProductWareHouses");
                });
#pragma warning restore 612, 618
        }
    }
}
